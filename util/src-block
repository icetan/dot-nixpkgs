#!/usr/bin/env perl
$FLAGS = "px";

$STYLE = $ENV{SB_STYLE};
$PRE_BREAK = not $ENV{SB_NO_PRE_BREAK};

$START   = $ENV{SB_START};
$END     = $ENV{SB_END};
$END_RES = $ENV{SB_END_RES};
$PRE     = $ENV{SB_PRE};
$PRE_END = $ENV{SB_PRE_END};

if ($STYLE =~ m/^org$/i) {
  # Org mode style comments
  $START   //= "^[\t ]*#\\+BEGIN_COMMENT\n%f\\[";
  $END     //= "]\n[\t ]*#\\+END_COMMENT";
  $END_RES //= "# END\\[]";
  $PRE     //= "#+BEGIN_EXAMPLE";
  $PRE_END //= $ENV{SB_PRE} // "#+END_EXAMPLE";
} else {
  # XML/Markdown style comments (default)
  $START   //= "[\t ]*<!--%f\\[";
  $END     //= "]-->";
  $END_RES //= "<!--END\\[]-->";
  $PRE     //= "```";
  $PRE_END //= $PRE;
}

$PRE =~ s/^|$/\n/g if $PRE_BREAK;
$PRE_END =~ s/^|$/\n/g if $PRE_BREAK;
$START =~ s/%f/(?<flags>[$FLAGS]*)/;
$END_RES_ = $END_RES =~ s/\\//rg;

$DEL = shift if $ARGV[0] eq "-d";

sub r { my %g = @_;
  return $g{all} if ($DEL or $g{flags} =~ m/x/);
  local $_ = `printf %s '$g{body}' | $g{cmd}`;
  if ($g{flags} =~ m/p/) { s/^/$PRE/; s/\n?$/$PRE_END/; }
  if ($g{flags} !~ m/[p]/) { s/^/\n/; }
  return $g{all} . $_ . $END_RES_;
}

undef $/;
$_ = <>;
s/(?<all>$START *(?<cmd>.+?)(?:\n(?<body>.*?))?$END)(?:(?:(?!$START).)*?$END_RES)?/r(%+)/mges;
print;
